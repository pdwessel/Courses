??datasets
??datasets
??datasets-package
?brewer.pal
library(RColorBrewer)
?brewer.pal
??graphics
?blue.colors
library(UsingR)
data(galton)
head(galton
head(galton)
mc <- mean(galton$child)
mp <- mean(galton$parent)
sc <- sd(galton$child)
sp <- sd(galton$child)
corcp <- with(galton, cor(child, parent))
vec <- c(mc, mp, sc, sp, corcp, corcp)
tab <- matrix(vec,3,2)
tab
vec <- c(mc, sc, corcp, mp, sp, corcp)
tab <- matrix(vec,3,2)
tab
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~parent, galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes+varEst)
efit <- lm(accel~mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
mse <- function(mu){sum((x-mu)^2)}
mse(1.077)
mse(0.1471)
mse(0.3)
mse(0.0025)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
data(mtcars)
lm(mpg~weight, mtcars)
head(mtcars)
lm(mpg~wt, mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x_nor <- (x - mean(x))/sd(x)
x_nor
x_nor <- (x - mean(x))/var(x)
x_nor
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
mse <- function(mu){sum(w*(x-mu)^2)}
mse(1.077)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mse(1.077)
mse(.0025)
mse(.1471)
mse(.3)
sum(x*w)/sum(w)
library(UsingR); library(ggplot2); data(diamond)
g1 <- ggplot(diamond, aes(x = carat, y = price))
g1 <- g1 + xlab("Mass (carats)")  + ylab("Price ($)")
g1 <- g1 + geom_point(size = 6, colour = "black", alpha = 0.2)
g1 <- g1 + geom_point(size = 5, colour = "bllu", alpha = 0.2)
g1 <- g1 + geom_smooth(method = "lm", colour = "black")
g1
library(UsingR); library(ggplot2); data(diamond)
g1 <- ggplot(diamond, aes(x = carat, y = price))
g1 <- g1 + xlab("Mass (carats)")  + ylab("Price ($)")
g1 <- g1 + geom_point(size = 3, colour = "black", alpha = 0.2)
g1 <- g1 + geom_point(size = 2, colour = "blue", alpha = 0.2)
g1 <- g1 + geom_smooth(method = "lm", colour = "black")
g1
swirl()
fit <- lm(child~parent, galton)
sqrt(sum(fit$residuals)^2/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum(child-mu)^2
sTot <- sum(galton$child-mu)^2
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(fit)
sRes/sTot
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
ones <- rep(1,nrow(galton))
lm(child~ones + parent -1, galton)
lm(child~parent,galton)
lm(child,1,galton)
lm(child~1,galton)
head(trees)
fit <- lm(Volume~Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lappy(list(fit,fit2), coef)
lapply(list(fit,fit2), coef)
all <- lm(Fertility~., swiss)
summary(all)
summary(lm(Fertility~Agricultre,swiss))
summary(lm(Fertility~Agriculture,swiss))
cor(Examination, Education)
with(swiss, cor(Examination, Education))
cor(swiss$Examination, swiss$Education))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination = swiss$Catholic
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~. + ec, swiss)
all$coefficients - efit$coefficients
?mtcars
library(swirl)
swirl()
fit <- lm(y~x, out2)
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1 - resid(fit)[1]/resno
head(ahtvalues(fit))
head(hatvalues(fit))
sigma <- sqrt(sum(resid(fit)^2)/fit$df.residual)
rstd <- resid(fit)/(sigma*(1 - sqrt(hatvalues(fit)))
)
rstd <- resid(fit)/(sigma*(1 - sqrt(hatvalues(fit))))
rstd <- resid(fit)/(sigma * sqrt(1 - hatvalues(fit))))
rstd <- resid(fit)/(sigma * sqrt(1 - hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(resid(fitno)/fit$df.residual))
sigma1 <- sqrt(resid(fitno)/fit$df.residual)
sigma1 <- sqrt(deviance(fitno)/fitno$df.residual)
resid(fit)[1]/(sqrt(1-hatvalues(fit)[1])*sigma1)
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
dy/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which = 5)
library(datsets)
library(dataset)
library(datasets)
data(mtcars)
head(mtcars)
fit1 <- lm(mpg~factor(cyl) + wt, mtcars)
summary(fit1)
fit2 <- lm(mpg~factor(cyl), mtcars)
summary(fit2)
fit3 <- lm(mpg~factor(cyl) * wt, mtcars)
summary(fit3)
anova(fit, fit3)
install.packages(epicalc)
install.packages("epicalc")
?lrtest
install.packages("lmtest")
anova(fit1, fit3)
fit4 <- lm(mpg~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5(y~x)
fit5 <- lm(y~x)
hatvalues(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6 <- lm(y~x)
dfbeta(fit6)
influence.measures(fit6)
x <- seq(-10, 10, length = 1000)
manipulate(plot(x, exp(beta0 + beta1 * x)/(1 + exp(beta0 + beta1*x)), typl = "l", lwd = 3, frame = FALSE),
beta0 = slider(-2,2, step = 0.1, initial = 2), beta1 = slider(-2,2, step = 0.1, initial = 0))
library(manipulate)
x <- seq(-10, 10, length = 1000)
manipulate(plot(x, exp(beta0 + beta1 * x)/(1 + exp(beta0 + beta1*x)), typl = "l", lwd = 3, frame = FALSE),
beta0 = slider(-2,2, step = 0.1, initial = 2), beta1 = slider(-2,2, step = 0.1, initial = 0))
library(swirl)
swirl()
rpg1()
rgp1 <- function(){
print("Processing. Please wait.")
# number of samples per simulation
n <- 100
# number of simulations
nosim <- 1000
# set seed for reproducibility
set.seed(4321)
# Point A
x1 <- rnorm(n)
x2 <- rnorm(n)
x3 <- rnorm(n)
# Point B
betas <- sapply(1 : nosim, function(i)makelms(x1, x2, x3))
roun
rgp1 <- function(){
print("Processing. Please wait.")
# number of samples per simulation
n <- 100
# number of simulations
nosim <- 1000
# set seed for reproducibility
set.seed(4321)
# Point A
x1 <- rnorm(n)
x2 <- rnorm(n)
x3 <- rnorm(n)
# Point B
betas <- sapply(1 : nosim, function(i)makelms(x1, x2, x3))
round(apply(betas, 1, var), 5)
}
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data = swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . -Examination, data = swiss)
vif(mdl2)
x1c <- simbas()
x1c <- simbias()
apply(x1c,1,mean)
fit1 <-  lm(Fertility ~ Agriculture, data = swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data = swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit, fit3, fit5, fit6)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
ravenData
mdl <- glm(ravenWinNum~ravenScore, family = "binomial", data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl(
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(.95, 1)
library(swirl)
swirl()
var(rpois(1000,50))
head(hits)
class(hits[,'dates'])
class(hits[,'date'])
as.integer(head(hits[,'dates']))
as.integer(head(hits[,'date']))
mdl <- glm(visits~date, poisson, hits)
summary(mdl)
confint(mdl,'date')
exp(confint(mdl,'date'))
which.max((hits[,'visits'])
)
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95,lambda)
mdl2 <- glm(visits~date, poisson, hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats~ data, family = poisson, data = hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(MASS)
?shuttle
fit1 <- glm(use ~ wind, family = 'binomial', data = shuttle)
?glm
exp(coef(fit1))
fit2 <- glm(use ~ wind + magn, family = 'binomial', data = shuttle)
exp(coef(fit2))
fit3 <- glm((use -1) ~ wind, family = 'binomial', data = shuttle)
use2 <- shuttle[,'use'] -1
use2 <- as.factor(-1*as.numeric(shuttle[,'use']) - 1))
use2 <- as.factor(-1*(as.numeric(shuttle[,'use']) - 1))
fit3 <- glm(use2 ~ wind, family = 'binomial', data = shuttle)
coef(fit3)
coef(fit1)
head(InsectSprays)
fit4 <- glm(count ~ spray, family = poisson, data = InsectSprays)
exp(coef(fit4))
exp(coef(fit4))[2]
1/exp(coef(fit4))[2]
setwd('Courses/Course - Regression')
knitr::opts_chunk$set(echo = TRUE)
data("mtcars")
head(mtcars)
summary(mtcars)
head(mtcars)
str(mtcars)
data("mtcars")
head(mtcars)
str(mtcars)
?mtcars
data("mtcars")
head(mtcars)
str(mtcars)$am
data("mtcars")
head(mtcars)
str(mtcars)["am","mpg"]
data("mtcars")
head(mtcars)
str(mtcars)
?influence.measures
?mtcars
cor(mtcars)
?anova
fit1 <- lm(mpg~am, data = mtcars)
fit2 <- lm(mpg~am+factor(carb), data = mtcars)
fit3 <- lm(mpg~am+factor(carb)+qsec, data = mtcars)
fit4 <- lm(mpg~am+factor(carb)+qsec+factor(gear), data = mtcars)
anova(fit1, fit2, fit3, fit4)
summary(fit1)$coef
summary(fit2)$coef
resid(fit1)
plot(resid(fit1))
plot(resid(fit2))
plot(resid(fit1))
plot(resid(fit2))
par(mfrow=c(1,2))
plot(resid(fit1))
plot(resid(fit2))
summary(fit3)$coef
plot(resid(fit3))
summary(fit2)$coef
?mtcars
fit5 <- lm(mpg~am+carb,mtcars)
summary(fit5)coef
summary(fit5)$coef
fit1 <- lm(mpg~am, data = mtcars)
fit2 <- lm(mpg~am+carb, data = mtcars)
fit3 <- lm(mpg~am+carb+qsec, data = mtcars)
fit4 <- lm(mpg~am+carb+qsec+gear, data = mtcars)
anova(fit1, fit2, fit3, fit4)
summary(fit2)$coef
summary(fit3)$coef
knitr::opts_chunk$set(echo = FALSE)
fit1 <- lm(mpg~am, data = mtcars)
fit2 <- lm(mpg~am+factor(carb), data = mtcars)
fit3 <- lm(mpg~am+factor(carb)+qsec, data = mtcars)
fit4 <- lm(mpg~am+factor(carb)+qsec+factor(gear), data = mtcars)
anova(fit1, fit2, fit3, fit4)
summary(fit2)$coef
summary(fit3)$coef
library(ggplot2)
p1 <- ggplot(mtcars, aes(resid(fit2))) + geom_point + geom_smooth
p1 <- ggplot(mtcars, aes(resid(fit2)))
p1 <- p1 + geom_point
p1 <- ggplot(mtcars, aes(y = resid(fit2)))
p1 <- p1 + geom_point
p1 <- ggplot(x = 1:length(resid(fit2)), y = resid(fit2), aes(x=x,y=y))
a <- resid(fit2)
b <- 1:length(a)
p1 <- ggplot(x = b, y = a, aes(x=x,y=y))
class(a)
a
head(a)
a <- summary(resid(fit2))
a
plot(resid(fit2))
summary(fit2)$coef
summary(fit3)$coef

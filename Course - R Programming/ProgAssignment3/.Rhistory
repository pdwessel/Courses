submit()
remainder(5)
remainder(11,5)
remainder(divisor =  11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun")
paste("Programming", "is", "fun!")
submit()
telegram("Pete")
submit()
submit()
mad_libs(place = "Canada", adjective = "cold", noun = "city")
subit()
submit()
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)\
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
a <- 1:10
paste(a, '.csv', sep = "")
data <- read.csv(a)
?read.csv
read.csv(file = "1.csv")
setwd("~/specdata")
setwd("/specdata")
setwd("/specdata")
setwd("specdata")
ls
list
getwd
getwd()
setwd(..)
temp = list.files(pattern="*.csv")
b <- read.csv(file = temp)
b <- read.csv(file = temp[1])
b
swtwd("..")
setwd("..")
getwd()
temp2 <- list.files(path = "specdata", pattern = "*.csv")
j <- paste("specdata","/",temp2[1], sep = "")
j <- paste("specdata","\",temp2[1], sep = "")
j <- paste("specdata","?",temp2[1], sep = "")
j <- paste("specdata","/",temp2[1], sep = "")
read.csv(j)
j <- paste("specdata","/",temp2, sep = "")
?mean
source("pollutantmean.R")
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
j[3]
my_files <- list.files(path = directory, pattern = "*.csv")
directory = "specdata"
my_files <- list.files(path = directory, pattern = "*.csv")
my_files <- paste(directory, "/",my_files, sep = "")
read.csv(my_files[2])
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean(("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
be <- numeric(length = 3)
be[6] <- 4
mean(b)
b
be
mean(be)
mean(be, na.rm = TRUE)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 23)
?rep
ce = NA
ce[45] = 4
ce <- NA
ce[4] <- 4
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
ab <- 70:72
for (i in ab) {print(my_files[i])}
pollutantmean("specdata", "sulfate", 1:10)
?mean
?length
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
length(which(!is.na(b[["nitrate"]])))
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
source('~/Data Science/Workspace/polluntantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
length(which(!is.na(b))
length(which(!is.na(b)))
length(which(!is.na(b[["nitrate"]])))
length(which(!is.na(b[["nitrate"]] & b[["sulfate"]])))
b <- read.csv(my_files[1])
length(which(!is.na(b[["nitrate"]] & b[["sulfate"]])))
length(which(!is.na(b[["sulfate"]])))
length(which(!is.na(b[["nitrate"]])))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
complete("specdata", 3)
complete("specdata", 1)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1)
complete("specdata", 1:5)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1:5)
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
?data.frame
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
source('~/Data Science/Workspace/complete.R')
complete("specdata", c(2,4,8,10,12))
complete("specdata", 1)
source('~/Data Science/Workspace/complete.R')
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
complete(b)[["nobs"]]
complete("specdata" , 3)[["nobs"]]
source('~/Data Science/Workspace/corr.R')
source('~/Data Science/Workspace/complete.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
source('~/Data Science/Workspace/complete.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
length(my_files)
for (i in length(my_files)) {print(i)}
for (i in length(my_files)) {print(i)}
for (i in 1:length(my_files)) {print(i)}
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
head(cr)
ab <- cor(1:10, 2:11)
head(ab)
summary(ab)
length(ab)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 1000)
View(cr)
cr <- 0
nips <- which(!is.na(b[["nitrate"]]))
sufs <- which(!is.na(b[["sulfate"]]))
index <- !is.na(b[["sulfate"]]) & !is.na(b[["nitrate"]])
ni <b[index]
ni <- b[index]
ni <- b[[nitrate]] & index
ni <- b[["nitrate"]] & index
nits < b[["nitrate"]]
nits <- b[["nitrate"]]
ni <- nits[index]
try <-b[["nitrate"]][index]
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 1000)
head(cr)
summary(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata")
length(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
summary(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
summary(cr)
length(cr)
View(cr)
View(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
View(complete)
View(temp)
source('~/Data Science/Workspace/corr.R')
cr <- corr("specdata")
length(cr)
summary(cr)
summary(round(cr, 3))
summary(round(cr, 4))
source('~/Data Science/Workspace/polluntantmean.R')
source('~/Data Science/Workspace/complete.R')
pollutantmean("specdata", "sulfate", 1:10)
round(pollutantmean("specdata", "nitrate", 70:72), 3)
round(pollutantmean("specdata", "sulfate", 34), 3)
round(pollutantmean("specdata", "sulfate"), 3)
round(pollutantmean("specdata", "nitrate"), 3)
cc <- compete("specdata", c(6,10,20,34,100,200,310))
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata",332:1)
use <- sample(332,10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
set.seed(197)
out <- c(n, round(cr[sample(n,5)],4))
n <- length(cr)
out <- c(n, round(cr[sample(n,5)],4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr,4)))
x <- list(a=1:5, b = rnorm(10))
lapply(x, mean)
x<- list(a=matrix(1:4,2,2), b=matrix(1:6, 3,2))
lapply(x, function(elt) elt[,1])
str(apply)
x <- matrix(rnorm(200), 20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,quantile, probs = c(0.25,0.75))
a <- array(rnorm(2 * 2* 10), c(2,2,10))
apply(a, c(1,2), mean)
source('~/Data Science/Workspace/my_functions.R')
x <- log(-1)
printmessage(x)
source('~/Data Science/Workspace/my_functions.R')
printmessage(x)
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(unique_vals, unique)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library("swirl")
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, mean)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
tapply(iris$Sepal.Length, mean)
sapply(iris$Sepal.Length
)
vapply(iris$Sepal.Length, iris$Species, mean)
iris$Species
tapply(iris$Sepal.Length, iris$Species, mean)
colmeans(iris)
colMeans(iris)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars,mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
b <- with(mtcars, tapply(hp, cyl, mean))
b[3] - b[1]
debug(ls)
ls
setwd("~/Data Science/Workspace/Course - R Programming/ProgAssignment3")
getwd()
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
df <- best("AL", "heart attack")
df <- read.csv("outcome-of-care-measures.csv", na.strings
= "Not Available", stringsAsFactors = FALSE)
outcome = "heart attack"
outcomes <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
df <- df[,c(2,7,outcomes[outcome])]
names(df) <- c("hospital", "state", "outcome")
head(df)
df <- df[!is.na(df$outcome),]
dfs <- df[order(df$state, df$outcome, df$hospital),]
head(dfs)
state = "AL"
bst <- split(dfs, dfs$state = state)
bst <- split(dfs, dfs$state == state)
bst
dfs[2]
dfs[1]
head(dfs)
bst[1]
bst[2]
a <- bst[2]
a[1]
ast <- split.data.frame(dfs, dfs$state == state)
ast[2]
mst <-dfs[dfs$state==state]
mst <-dfs[dfs$state==state,]
mst
mst[1,,]
mst[1]
mst[1,1]
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
dfs <- df[order(df$state, df$outcome, df$hospital),]
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
dims <- dim(mst)
dims
dims[1]
dim(mst)[1]
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
?lapply
j <- unique(dfs[,2])
q <- lapply(dfs[dfs$state == j,], function(X) {
x[1,1]}
)
q <- lapply(dfs[dfs$state == j,], function(X) { X[1,1]})
q <- lapply(dfs[dfs$state == j,], function(X) { X[1]})
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"),3)
tail(rankall("heart failure"), 10)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/best.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankhospital.R')
source('~/Data Science/Workspace/Course - R Programming/ProgAssignment3/rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
rankall("pneumonia", "worst")
rankall("heart failure", 10)

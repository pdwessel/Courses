plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pals <- colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volanco, col = pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
mthigh
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ . , binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 0.5)
g+geom_point(size = 4, alpha = 0.5, aes(color = drv))
g+geom_point(size = 4, alpha = 0.5, aes(color = drv))+labs(title = "Swirl Rules!") +labs(x="Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!") +labs(x="Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 4, alpha = 0.5)+geom_smooth(size = 4, linetype = 3, menthod = "lm", se = FALSE)
g+geom_point(aes(color = drv), size = 4, alpha = 0.5)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x=myx, y-myy))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x=displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size = 2, color = "black")+labs(title="Swirl Rules!", x = "Displacement", y = "Hwy Mileage")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size = 2, color = "black")+labs(title="Swirl Rules!", x = "Displacement", y = "Highway Mileage")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size = 2, color = "black")+labs(x = "Displacement", y = "Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_spoke(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
?qplot
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$cut2 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(x=depth, y=price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size = 3, color = "pink")
ggplot(diamonds, aes(x=carat, y=price))+geom_boxplot()+facet_grid(.~cut)
install.packages("kernlab")
library(kernlab)
data("spam")
swirl()
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.5*0.8*1.6
0.64
mypdf()
mypdf
?integrate
integrate(mypdf, 0, 1.6)
sqrt(2)
library(swirl)
swirl()
0.997*0.001
(1 - 0.985)*(1-0.001)
0.000997/0.014985
(.997*0.001)/(.997*0.001+0.15*.999)
(.997*0.001)/(.997*0.001+0.015*.999)
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(edh+edl)*0.5
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
?qunif
(0.75*0.3)/(0.75*0.3+0.25*0.7)
(0.75*0.3)/(0.75*0.3+0.48*0.7)
library(swirl)
swirl()
library(swirl)
library(swirl)
swirl()
dice_sqr
sum(dice_sqr * ex2_fair)
ex_fair <- sum(dice_sqr * dice_fair)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5 ^ 2
sum(dice_sqr * dice_high) - 3.5 ^ 2
sum(dice_sqr * dice_high) - edh ^ 2
sd(apply(matix(rnorm(10000),1000),1,mean))
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2+choose(5,4)*0.8^4*0.2^1+choose(5,5)*0.8^5*0.2^0
pbinom(2,5,0.5, lower.tail = FALSE)
pbinom(2,size = 5,prob =0.8, lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975, mean 3, std = 2)
qnorm(0.975, mean 3, sd = 2)
qnorm(0.975, mean = 3, sd = 2)
3+2*1.96
pnorm(quantile = 1200, mean = 1020, sd = 50)
pnorm(1200, mean = 1020, sd = 50)
pnorm(1200, mean = 1020, sd = 50, lower.tail = FASLE)
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(0.000159, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(0.75, mean = 1020, sd = 50)
qnorm(0.53)
pnorm(qnorm(0.53))
0.53
ppois(3, mean = 2.5*4)
?ppois
ppois(3, lambda = 2.5*4)
pbinom(5, size = 1000, prob = 0.01)
ppois(5, lambda = 1000*0.01)
coinPlot(10)
coinPlot(10000)
qnorm(95)
qnorm(.95)
12
0.6+c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
x$conf.int
binom.test(60. 100)$conf.int
binom.test(60, 100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(0.975)*sqrt(lamb)
lamb + c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.2)
poisson.test(5,94.2)$conf
poisson.test(5,94.32)$conf
pnorm(70, 80, 10)
qnorm(95, 1100, 75)
1100+75*1.645
choose(5,4)*0.5^4*0.5^1+choose(5,5)*0.5^5*0.5^0
?ppois
ppois(10,15)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975, df = 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1)*qt(0.975, df = 9)*s/sqrt(10)
t.test(difference)$conf.int
7*15.35^2+20*18.23^2
sp <- 7*15.35^2+20*18.23^2
sp <- 7*15.34^2+20*18.23^2
ns <- 7 + 20
sp <- sqrt(sp/ns)
gh
01
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8 +1/21)
sp <- (var(g1)*9 + 9*var(g2))/18
sp <- sqrt((var(g1)*9 + 9*var(g2))/18)
sp <- sqrt((9*var(g1) + 9*var(g2))/18)
md + c(-1,1)*qt(0.975)*sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(1/10+1/10)
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf.int
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7+18.23^4/21^2/20
mydf <- num/den
132.86-127.44+c(-1,1)*qt(0.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
library(swirl)
swirl()
install.packages("UsingR")
library(UsingR)
data(fater.son)
data("father.son")
x <- father.son$sheight
n <- length(x)
B <- 10000
resamples <- matrix(sample(x, n*B, replace = TRUE), B, n)
resampledMedians <- apply(resamples, 1, median)
sd(resampledMedians)
quantile(resampledMedians, c(0.025, 0.975))
w1 <- c(140,138,150,148,135)
w2 <- c(132,135,151,146,130)
s_avg <- mean(w1-w2)
s_sd <- sd(w1-wd)
s_sd <- sd(w1-w2)
s_SE <- s_sd/2
s_avg/s_SE
T-stat <- s_avg/s_SE
Tstat <- s_avg/s_SE
pt(Tstat, df = 4)
p <- (1-pt(Tstat, df=4))/2
p
p*2
pt(3.236, df = 14)
p <- (1-pt(Tstat, df=4))*2
p
sd1 <sd(w1)
sd1 <- sd(w1)
sd2 <- sd(w2)
sp <- sqrt((4*sd1^2+4*sd2^2)/8)
s_se <- sp*sqrt(0.5)
Tstat <- (mean(w1) - mean(w2))/s_se
p <- (1-pt(Tstat, df=4))*2
p
qt(0.05, df = 8)
qt(0.975, df = 8)
pt(.75, df = 3)
sp <- sqrt((8*1.2^2+8*1.8^2)/16)
se <- sp*sqrt(.25)
tStat <- (-3-1)/se
pt(tStat, df = 16)
z <- qnorm(.95)
pnorm(z*0.04, mean = 0.01, sd = 0.04, lower.tail = FALSE)
sd <- 0.04/120
sd1 <- 0.04/120
pnorm(1.645*sd1, mean = 0.01, sd = sd1, lower.tail = FALSE)
sd1 <- 0.04/sqrt(120)
pnorm(1.645*sd1, mean = 0.01, sd = sd1, lower.tail = FALSE)
sd1 <- 0.04/sqrt(140)
pnorm(1.645*sd1, mean = 0.01, sd = sd1, lower.tail = FALSE)
getwd()
dir()
setwd("Course - Stat Inference")
ls
dir()
library(datasets)
head(ToothGrowth)
dim(ToothGrowth)
summary(ToothGrowth)
str(ToothGrowth)
?ToothGrowth
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
?ToothGrowth
dev.off()
?rexp
lambda = 0.2
obs <- 1000
sim <- 40
t <- rexp(10, lambda)
t
set.seed(12345)
n <- 1000
sims <- 40
lambda <- 0.2
simData <- matrix(rexp(n*sims, lambda),n,sims) #Generate Data
simMean <- apply(simData, 1, mean)
set.seed(12345)
n <- 1000
sims <- 40
lambda <- 0.2
simData <- matrix(rexp(n*sims, lambda),sims,n) #Generate Data
simMean <- apply(simData, 1, mean)
set.seed(12345)
n <- 1000
sims <- 40
lambda <- 0.2
simData <- matrix(rexp(n*sims, lambda),n,sims) #Generate Data
simMean <- apply(simData, 1, mean) #Calcluate the mean of each simulation
set.seed(12345)
n <- 1000
sims <- 40
lambda <- 0.2
simData <- matrix(rexp(n*sims, lambda),n,sims) #Generate Data
simMeans <- apply(simData, 1, mean) #Calcluate the mean of each simulation
simMean <- mean(simMeans)
hist(simMeans)
abline(5)
abline(x=5)
dev.off()
library(lattice)
?hist
library(ggplot2)
?geom_histogram
??ggplot
p1 <- ggplot(simMeans, aes(simMeans))
p1 <- ggplot(simMeans)
?qplot
qplot(1, simMeans, geom = "histogram", binwidth = 0.2)
qplot(simMeans, geom = "histogram", binwidth = 0.2)
qplot(simMeans, geom = "histogram", binwidth = 0.1)
qplot(simMeans, geom = "histogram", binwidth = 0.1, col = "light blue")
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "light blue")
colours
colours(10)
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "lightblue")
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "lightblue2")
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "lightblue2)
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = lightblue2)
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "blue")
qplot(simMeans, geom = "histogram", binwidth = 0.1, colour = "blue", fill = "lightblue1")
qplot(simMeans, geom = "histogram", binwidth = 0.1)
?qplot
dev.off()
hist(simMeans, binwidth = 0.1)
?hist
hist(simMeans, breaks = 40)
abline(v = 5)
abline(v = 5, lwd = 3)
abline(v = simMean, lwd = 3, colour = "red")
abline(v = simMean, lwd = 3, color = "red")
abline(v = simMean, lwd = 3, col = "red")
legend
legend()
?legend
?text
?abline
dev.off()
hist(simMeans, breaks = 30, title = "Histogram of Simulation Means")
abline( v = 5, col = "blue", lwd = 2)
abline( v = simMean, col = "red", lwd = 2)
dev.off()
?fig.align
??fig.align
?variance
?var
var(simMeans)
1/sqrt(.2)
simVars <- apply(simData, 1, var)
simVar <- mean(simVars)
simVar
simVars(1)
simVars[1]
1/0.2^2
?stat_function
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20),n),1,cfunc,20),
apply(matrix(rexp(n*40),n),1,cfunc,40),
apply(matrix(rexp(n*60),n),1,cfunc,60)
),
size = factor(rep(20,40,60),rep(n,3)))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 <- p3 + facet_grid(.~size)
print(p3)
print(p3)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(20,40,60),rep(n,3)))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 <- p3 + facet_grid(.~size)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(20,40,60),rep(n,3)))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(c(20,40,60),rep(n,3))))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(c(20,40,60),rep(n,3))))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size) + stat_function(fun = dnorm, size = 2)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(c(20,40,60),rep(n,3))))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.2, binwidth = .3, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size) + stat_function(fun = dnorm, size = 1)
?geom_histogram
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(c(20,40,60),rep(n,3))))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.1, binwidth = .3, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size) + stat_function(fun = dnorm, size = 1)
set.seed(1435)
library(ggplot2)
cfunc <- function(x,no) sqrt(no)*(mean(x) - 5)/5
dat <- data.frame(
x = c(apply(matrix(rexp(n*20, lambda),n),1,cfunc,20),
apply(matrix(rexp(n*40, lambda),n),1,cfunc,40),
apply(matrix(rexp(n*60, lambda),n),1,cfunc,60)
),
size = factor(rep(c(20,40,60),rep(n,3))))
p3 <- ggplot(dat, aes(x=x, fill = size)) + geom_histogram(alpha = 0.1, binwidth = .5, colour = "black", aes(y = ..density..))
p3 + facet_grid(.~size) + stat_function(fun = dnorm, size = 1)
?ToothGrowth
str(ToothGrowth)
summary(ToothGrowth)
?t.test
small <- ToothGrowth['dose'=0.5]
small <- ToothGrowth[,'dose'=0.5]
small <- ToothGrowth[,dose=0.5]
head(sleep)
with(ToothGrowth, t.test(len[supp=="OJ"], len[supp=="VC"], subset(does == 0.5)))
with(ToothGrowth, t.test(len[supp=="OJ"], len[supp=="VC"], subset(dose == 0.5)))
with(ToothGrowth, t.test(len[supp=="OJ"], len[supp=="VC"]))
with(ToothGrowth, t.test(len~supp|dose))
with(ToothGrowth, t.test(len~supp))
?formula
with(ToothGrowth, t.test(len~dose|supp))
with(ToothGrowth, t.test(len[supp=="OJ" & dose == 0.5], len[supp=="VC" & dose == 0.5]))
with(ToothGrowth, t.test(len[supp=="OJ" & dose == 1], len[supp=="VC" & dose == 1]))
with(ToothGrowth, t.test(len[supp=="OJ" & dose == 2], len[supp=="VC" & dose == 2]))
ToothGrowth
ToothGrowth$len[dose == 0.5 & supp == "OJ"]
ToothGrowth$len[ToothGrowth$dose == 0.5 & ToothGrowth$supp == "OJ"]
ToothGrowth$len[ToothGrowth$dose == 0.5 & ToothGrowth$supp == "VC"]
?t.test
with(ToothGrowth, t.test(len[supp=="OJ" & dose == 2], len[supp=="VC" & dose == 2], alternative = "two.sided"))
with(ToothGrowth, t.test(len[supp=="OJ" & dose == 2], len[supp=="VC" & dose == 2], alternative = "two.sided")$conf)
a <- with(ToothGrowth, t.test(len[supp=="OJ" & dose == 2], len[supp=="VC" & dose == 2], alternative = "two.sided")$conf)
a
d05 <- with(ToothGrowth, t.test(len[supp=="OJ" & dose == 0.5], len[supp=="VC" & dose == 0.5], alternative = "two.sided")$conf)
d10 <- with(ToothGrowth, t.test(len[supp=="OJ" & dose == 1], len[supp=="VC" & dose == 1], alternative = "two.sided")$conf)
d20 <- with(ToothGrowth, t.test(len[supp=="OJ" & dose == 2], len[supp=="VC" & dose == 2], alternative = "two.sided")$conf)
d05
I am going to see if the delivery method (orange juice (OJ) or ascorbic acid (VC)) produced statistically significant diffences in length. The 95% confidence intervals that the difference in mean tooth length for each delivery method by does are (In order 05, 1.0 and 2.0):
